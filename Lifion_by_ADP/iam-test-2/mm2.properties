# Kafka dedicated mirror maker cluster.
clusters = primary, secondary
primary.bootstrap.servers = b-1.business-events-test.md8eek.c24.kafka.us-east-1.amazonaws.com:9098,b-2.business-events-test.md8eek.c24.kafka.us-east-1.amazonaws.com:9098
secondary.bootstrap.servers = b-1.be-kafak-mm2-test.7wrvff.c24.kafka.us-east-1.amazonaws.com:9098,b-2.be-kafak-mm2-test.7wrvff.c24.kafka.us-east-1.amazonaws.com:9098

primary->secondary.enabled = true
secondary->primary.enabled = true

refresh.topics.enabled = true
refresh.topics.interval.seconds = 30

refresh.groups.enabled = true
refresh.groups.interval.seconds = 30

topics = .*
groups = .*

topics.blacklist = .*[\-\.]internal, .*\.replica, __consumer_offsets
groups.blacklist = console-consumer-.*, connect-.*, __.*

refresh.topics.enabled=true
refresh.topics.interval.seconds = 30

refresh.groups.enabled = true
refresh.groups.interval.seconds = 30

sync.topic.configs.enabled = true
sync.topic.acls.enabled = true
sync.group.offsets.enabled = true
sync.group.offsets.interval.seconds = 30

replication.factor = 2

heartbeats.topic.replication.factor = 2
checkpoints.topic.replication.factor = 2
offset-syncs.topic.replication.factor = 2

primary.config.storage.replication.factor = 2
primary.offset.storage.replication.factor = 2
primary.status.storage.replication.factor = 2

secondary.offset.storage.replication.factor = 2
secondary.config.storage.replication.factor = 2
secondary.status.storage.replication.factor = 2

emit.checkpoints.interval.seconds = 30
sync.group.offsets.interval.seconds = 30



primary.security.protocol = SASL_SSL
primary.sasl.mechanism = AWS_MSK_IAM
primary.sasl.jaas.config = software.amazon.msk.auth.iam.IAMLoginModule required awsProfileName="BusinessEventsProducerServiceIAMRole";
primary.sasl.client.callback.handler.class = software.amazon.msk.auth.iam.IAMClientCallbackHandler


secondary.security.protocol = SASL_SSL
secondary.sasl.mechanism = AWS_MSK_IAM
secondary.sasl.jaas.config = software.amazon.msk.auth.iam.IAMLoginModule required awsProfileName="BusinessEventsProducerServiceIAMRole";
secondary.sasl.client.callback.handler.class = software.amazon.msk.auth.iam.IAMClientCallbackHandler
# primary.security.protocol=SSL
# secondary.security.protocol=SSL

#primary.security.protocol=SASL_SSL
#primary.sasl.mechanism=SCRAM-SHA-512
#primary.ssl.truststore.location=/tmp/kafka.client.truststore.jks
#primary.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required \
#  username="be_producer" \
#  password="be_producer-BusinesseventsProducer";

#secondary.security.protocol=SASL_SSL
#secondary.sasl.mechanism=SCRAM-SHA-512
#secondary.ssl.truststore.location=/tmp/kafka.client.truststore.jks
#secondary.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required \
#  username="be_producer" \
#  password="be_producer-BusinesseventsProducer";

primary->secondary.emit.heartbeats.enabled = true 
primary->secondary.emit.checkpoints.enabled = true

secondary->primary.emit.heartbeats.enabled = true 
secondary->primary.emit.checkpoints.enabled = true
